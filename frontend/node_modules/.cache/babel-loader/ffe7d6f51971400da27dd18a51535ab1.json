{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatAPP\\\\frontend\\\\src\\\\components\\\\Avatar\\\\GroupChatsapperance.js\";\nimport { ChatState } from \"../Context/GlobalHooks\";\nimport { isSameSenderMargin, isSameUser } from \"../../config/ChatLogic\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GroupChats(_ref) {\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SCR, {\n      children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n            marginLeft: isSameSenderMargin(messages, m, i, user._id),\n            marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n            marginTop: \"8px\",\n            borderRadius: \"20px\",\n            padding: \"5px 15px\",\n            maxWidth: \"75%\"\n          },\n          children: m.sender._id === user._id ? m.content : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: m.sender.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), m.content]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)\n      }, m._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = GroupChats;\nexport default GroupChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupChats\");","map":{"version":3,"names":["ChatState","isSameSenderMargin","isSameUser","ScrollableFeed","GroupChats","messages","user","map","m","i","display","backgroundColor","sender","_id","marginLeft","marginTop","borderRadius","padding","maxWidth","content","name"],"sources":["C:/chatAPP/frontend/src/components/Avatar/GroupChatsapperance.js"],"sourcesContent":["import { ChatState } from \"../Context/GlobalHooks\";\r\nimport { isSameSenderMargin, isSameUser } from \"../../config/ChatLogic\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\n\r\nfunction GroupChats({ messages }) {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <>\r\n      <SCR>\r\n        {messages &&\r\n          messages.map((m, i) => (\r\n            <div style={{ display: \"flex\" }} key={m._id}>\r\n              <span\r\n                style={{\r\n                  backgroundColor: `${\r\n                    m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                  }`,\r\n                  marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                  marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                  marginTop: \"8px\",\r\n                  borderRadius: \"20px\",\r\n                  padding: \"5px 15px\",\r\n                  maxWidth: \"75%\",\r\n                }}\r\n              >\r\n                {m.sender._id === user._id ? (\r\n                  m.content\r\n                ) : (\r\n                  <>\r\n                    <b>{m.sender.name}</b>\r\n                    <br></br>\r\n                    {m.content}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          ))}\r\n      </SCR>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GroupChats;\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;;AAEA,SAASC,UAAT,OAAkC;EAAA,IAAd;IAAEC;EAAF,CAAc;EAChC,MAAM;IAAEC;EAAF,IAAWN,SAAS,EAA1B;EAEA,oBACE;IAAA,uBACE,QAAC,GAAD;MAAA,UACGK,QAAQ,IACPA,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACX;QAAK,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAX,CAAZ;QAAA,uBACE;UACE,KAAK,EAAE;YACLC,eAAe,EAAG,GAChBH,CAAC,CAACI,MAAF,CAASC,GAAT,KAAiBP,IAAI,CAACO,GAAtB,GAA4B,SAA5B,GAAwC,SACzC,EAHI;YAILC,UAAU,EAAEb,kBAAkB,CAACI,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACO,GAAtB,CAJzB;YAKLE,SAAS,EAAEb,UAAU,CAACG,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACO,GAAtB,CAAV,GAAuC,CAAvC,GAA2C,EALjD;YAMLE,SAAS,EAAE,KANN;YAOLC,YAAY,EAAE,MAPT;YAQLC,OAAO,EAAE,UARJ;YASLC,QAAQ,EAAE;UATL,CADT;UAAA,UAaGV,CAAC,CAACI,MAAF,CAASC,GAAT,KAAiBP,IAAI,CAACO,GAAtB,GACCL,CAAC,CAACW,OADH,gBAGC;YAAA,wBACE;cAAA,UAAIX,CAAC,CAACI,MAAF,CAASQ;YAAb;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;cAAA;cAAA;YAAA,QAFF,EAGGZ,CAAC,CAACW,OAHL;UAAA;QAhBJ;UAAA;UAAA;UAAA;QAAA;MADF,GAAsCX,CAAC,CAACK,GAAxC;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAkCD;;KArCQT,U;AAuCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}