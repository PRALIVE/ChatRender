{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatAPP\\\\frontend\\\\src\\\\components\\\\miscellaneous\\\\Leftpart.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { ChatState } from \"../Context/GlobalHooks\";\nimport ChatLoading from \"../Avatar/ChatLoading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Leftpart(_ref) {\n  _s();\n\n  let {\n    fetchAgain\n  } = _ref;\n  const {\n    user,\n    chats,\n    setChats,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchChats();\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        md: \"flex\"\n      },\n      flexDir: \"column\",\n      alignItems: \"center\",\n      p: 3,\n      bg: \"white\",\n      w: {\n        base: \"100%\",\n        md: \"31%\"\n      },\n      borderRadius: \"lg\",\n      borderWidth: \"1px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        pb: 3,\n        px: 3,\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        w: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [\"My Chats\", /*#__PURE__*/_jsxDEV(Button, {\n          display: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        flexDir: \"column\",\n        p: 3,\n        bg: \"#F8F8F8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n          overflowY: \"scroll\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => setSelectedChat(chat),\n            cursor: \"pointer\",\n            minH: \"60px\",\n            bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n            color: selectedChat === chat ? \"white\" : \"black\",\n            px: 3,\n            py: 2,\n            borderRadius: \"lg\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: !chat.isGroupChat ? chat.users[1].name : chat.chatname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"xs\",\n              children: [chat.latestMessage.sender.name, \" :\", chat.latestMessage.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, chat._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Leftpart, \"oyZZPyIuI3wCrd4nP62UGHgis08=\", false, function () {\n  return [useToast];\n});\n\n_c = Leftpart;\nexport default Leftpart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leftpart\");","map":{"version":3,"names":["AddIcon","Box","Button","Stack","Text","useToast","axios","useEffect","ChatState","ChatLoading","Leftpart","fetchAgain","user","chats","setChats","selectedChat","setSelectedChat","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","md","base","lg","map","chat","isGroupChat","users","name","chatname","latestMessage","sender","content","_id"],"sources":["C:/chatAPP/frontend/src/components/miscellaneous/Leftpart.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { ChatState } from \"../Context/GlobalHooks\";\r\nimport ChatLoading from \"../Avatar/ChatLoading\";\r\n\r\nfunction Leftpart({ fetchAgain }) {\r\n  const { user, chats, setChats, selectedChat, setSelectedChat } = ChatState();\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={{ md: \"flex\" }}\r\n        flexDir=\"column\"\r\n        alignItems=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w={{ base: \"100%\", md: \"31%\" }}\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Box\r\n          pb={3}\r\n          px={3}\r\n          fontSize={{ base: \"28px\", md: \"30px\" }}\r\n          fontFamily=\"Work sans\"\r\n          display=\"flex\"\r\n          w=\"100%\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          My Chats\r\n          <Button\r\n            display=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </Box>\r\n        <Box\r\n          d=\"flex\"\r\n          flexDir=\"column\"\r\n          p={3}\r\n          bg=\"#F8F8F8\"\r\n          w=\"100%\"\r\n          h=\"100%\"\r\n          borderRadius=\"lg\"\r\n          overflowY=\"hidden\"\r\n        >\r\n          {chats ? (\r\n            <Stack overflowY=\"scroll\">\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  cursor=\"pointer\"\r\n                  minH=\"60px\"\r\n                  bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                  color={selectedChat === chat ? \"white\" : \"black\"}\r\n                  px={3}\r\n                  py={2}\r\n                  borderRadius=\"lg\"\r\n                  key={chat._id}\r\n                >\r\n                  <Text>\r\n                    {!chat.isGroupChat ? chat.users[1].name : chat.chatname}\r\n                  </Text>\r\n                  {chat.latestMessage && (\r\n                    <Text fontSize=\"xs\">\r\n                      {chat.latestMessage.sender.name} :{chat.latestMessage.content}\r\n                    </Text>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <ChatLoading />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Leftpart;\r\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,QAAnC,QAAmD,kBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;;AAEA,SAASC,QAAT,OAAkC;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAChC,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC,QAAf;IAAyBC,YAAzB;IAAuCC;EAAvC,IAA2DR,SAAS,EAA1E;EACA,MAAMS,KAAK,GAAGZ,QAAQ,EAAtB;;EAEA,MAAMa,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;QAD7B;MADI,CAAf;MAMA,MAAM;QAAEC;MAAF,IAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAU,WAAV,EAAuBL,MAAvB,CAAvB;MACAL,QAAQ,CAACS,IAAD,CAAR;IACD,CATD,CASE,OAAOE,KAAP,EAAc;MACdR,KAAK,CAAC;QACJS,KAAK,EAAE,gBADH;QAEJC,WAAW,EAAE,0BAFT;QAGJC,MAAM,EAAE,OAHJ;QAIJC,QAAQ,EAAE,IAJN;QAKJC,UAAU,EAAE,IALR;QAMJC,QAAQ,EAAE;MANN,CAAD,CAAL;IAQD;EACF,CApBD;;EAsBAxB,SAAS,CAAC,MAAM;IACdW,UAAU;EACX,CAFQ,EAEN,CAACP,UAAD,CAFM,CAAT;EAIA,oBACE;IAAA,uBACE,QAAC,GAAD;MACE,OAAO,EAAE;QAAEqB,EAAE,EAAE;MAAN,CADX;MAEE,OAAO,EAAC,QAFV;MAGE,UAAU,EAAC,QAHb;MAIE,CAAC,EAAE,CAJL;MAKE,EAAE,EAAC,OALL;MAME,CAAC,EAAE;QAAEC,IAAI,EAAE,MAAR;QAAgBD,EAAE,EAAE;MAApB,CANL;MAOE,YAAY,EAAC,IAPf;MAQE,WAAW,EAAC,KARd;MAAA,wBAUE,QAAC,GAAD;QACE,EAAE,EAAE,CADN;QAEE,EAAE,EAAE,CAFN;QAGE,QAAQ,EAAE;UAAEC,IAAI,EAAE,MAAR;UAAgBD,EAAE,EAAE;QAApB,CAHZ;QAIE,UAAU,EAAC,WAJb;QAKE,OAAO,EAAC,MALV;QAME,CAAC,EAAC,MANJ;QAOE,cAAc,EAAC,eAPjB;QAQE,UAAU,EAAC,QARb;QAAA,oCAWE,QAAC,MAAD;UACE,OAAO,EAAC,MADV;UAEE,QAAQ,EAAE;YAAEC,IAAI,EAAE,MAAR;YAAgBD,EAAE,EAAE,MAApB;YAA4BE,EAAE,EAAE;UAAhC,CAFZ;UAGE,SAAS,eAAE,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA,QAHb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eA6BE,QAAC,GAAD;QACE,CAAC,EAAC,MADJ;QAEE,OAAO,EAAC,QAFV;QAGE,CAAC,EAAE,CAHL;QAIE,EAAE,EAAC,SAJL;QAKE,CAAC,EAAC,MALJ;QAME,CAAC,EAAC,MANJ;QAOE,YAAY,EAAC,IAPf;QAQE,SAAS,EAAC,QARZ;QAAA,UAUGrB,KAAK,gBACJ,QAAC,KAAD;UAAO,SAAS,EAAC,QAAjB;UAAA,UACGA,KAAK,CAACsB,GAAN,CAAWC,IAAD,iBACT,QAAC,GAAD;YACE,OAAO,EAAE,MAAMpB,eAAe,CAACoB,IAAD,CADhC;YAEE,MAAM,EAAC,SAFT;YAGE,IAAI,EAAC,MAHP;YAIE,EAAE,EAAErB,YAAY,KAAKqB,IAAjB,GAAwB,SAAxB,GAAoC,SAJ1C;YAKE,KAAK,EAAErB,YAAY,KAAKqB,IAAjB,GAAwB,OAAxB,GAAkC,OAL3C;YAME,EAAE,EAAE,CANN;YAOE,EAAE,EAAE,CAPN;YAQE,YAAY,EAAC,IARf;YAAA,wBAWE,QAAC,IAAD;cAAA,UACG,CAACA,IAAI,CAACC,WAAN,GAAoBD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcC,IAAlC,GAAyCH,IAAI,CAACI;YADjD;cAAA;cAAA;cAAA;YAAA,QAXF,EAcGJ,IAAI,CAACK,aAAL,iBACC,QAAC,IAAD;cAAM,QAAQ,EAAC,IAAf;cAAA,WACGL,IAAI,CAACK,aAAL,CAAmBC,MAAnB,CAA0BH,IAD7B,QACqCH,IAAI,CAACK,aAAL,CAAmBE,OADxD;YAAA;cAAA;cAAA;cAAA;YAAA,QAfJ;UAAA,GASOP,IAAI,CAACQ,GATZ;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADI,gBA0BJ,QAAC,WAAD;UAAA;UAAA;UAAA;QAAA;MApCJ;QAAA;QAAA;QAAA;MAAA,QA7BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAyED;;GAvGQlC,Q;UAEOL,Q;;;KAFPK,Q;AAyGT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}