{"ast":null,"code":"import _toConsumableArray from\"C:/chatAPP/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/chatAPP/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/chatAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/chatAPP/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{ArrowBackIcon,ViewIcon}from\"@chakra-ui/icons\";import\"./styles.css\";import{Box,Button,FormControl,IconButton,Input,Spinner,Text,useToast}from\"@chakra-ui/react\";import axios from\"axios\";import{useEffect,useState}from\"react\";import GroupChats from\"../Avatar/GroupChatsapperance\";import UpdateGroupChatModal from\"../Avatar/GroupSettings\";import ProfileModal from\"../Avatar/ProfileBadge\";import SingleChats from\"../Avatar/SingleChatsapperance\";import{ChatState}from\"../Context/GlobalHooks\";import io from\"socket.io-client\";import{getSender,getSenderFull}from\"../../config/ChatLogic\";import ScrollableFeed from\"react-scrollable-feed\";import\"./chatapplogo.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT=\"https://chatapp1207.herokuapp.com/\";var socket,selectedChatCompare;function SingleChat(_ref){var fetchAgain=_ref.fetchAgain,setFetchAgain=_ref.setFetchAgain;var _ChatState=ChatState(),user=_ChatState.user,selectedChat=_ChatState.selectedChat,setSelectedChat=_ChatState.setSelectedChat,notification=_ChatState.notification,setNotification=_ChatState.setNotification;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newMessage=_useState6[0],setNewMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),socketConnected=_useState8[0],setSocketConnected=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),typing=_useState10[0],setTyping=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),istyping=_useState12[0],setIsTyping=_useState12[1];var toast=useToast();var fetchMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var config,_yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(selectedChat){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.prev=2;setLoading(true);config={headers:{Authorization:\"Bearer \".concat(user.token)}};_context.next=7;return axios.get(\"/api/message/\".concat(selectedChat._id),config);case 7:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchMessages(){return _ref2.apply(this,arguments);};}();var eventhandler=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(event.key===\"Enter\"){sendMessage();}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function eventhandler(_x){return _ref3.apply(this,arguments);};}();var sendMessage=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var config,_yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!newMessage){_context3.next=16;break;}_context3.prev=1;config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};_context3.next=5;return axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat._id},config);case 5:_yield$axios$post=_context3.sent;data=_yield$axios$post.data;setMessages([].concat(_toConsumableArray(messages),[data]));socket.emit(\"new message\",data);setNewMessage(\"\");setFetchAgain(!fetchAgain);_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](1);toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[1,13]]);}));return function sendMessage(){return _ref4.apply(this,arguments);};}();useEffect(function(){socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connection\",function(){return setSocketConnected(true);});socket.on(\"typing\",function(){return setIsTyping(true);});socket.on(\"stop typing\",function(){return setIsTyping(false);});},[]);useEffect(function(){fetchMessages();selectedChatCompare=selectedChat;},[selectedChat]);useEffect(function(){socket.on(\"message recieved\",function(newMessageRecieved){if(!selectedChatCompare||// if chat is not selected or doesn't match current chat\nselectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved].concat(_toConsumableArray(notification)));setFetchAgain(!fetchAgain);}}else{setMessages([].concat(_toConsumableArray(messages),[newMessageRecieved]));}});});var typingHandler=function typingHandler(e){setNewMessage(e.target.value);if(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id);}var lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(function(){var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",display:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",bg:\"#F0F2F5\",children:[/*#__PURE__*/_jsx(IconButton,{display:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:function onClick(){return setSelectedChat(\"\");}}),!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users),children:/*#__PURE__*/_jsx(IconButton,{display:{base:\"flex\"},icon:/*#__PURE__*/_jsx(ViewIcon,{})})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatname.toUpperCase(),/*#__PURE__*/_jsx(_Fragment,{children:istyping?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchMessages:fetchMessages,fetchAgain:fetchAgain,setFetchAgain:setFetchAgain})]})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\"//bg=\"#EFEAE2\"\n,w:\"100%\",h:\"100%\",overflowY:\"hidden\",className:\"back\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(ScrollableFeed,{className:\"messages\",children:!selectedChat.isGroupChat?/*#__PURE__*/_jsx(SingleChats,{messages:messages}):/*#__PURE__*/_jsx(GroupChats,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{display:\"flex\",justifyContent:\"center\",onKeyDown:eventhandler,id:\"first-name\",isRequired:true,mt:5,mb:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"white\",width:\"90%\",placeholder:\"Enter a message..\",value:newMessage,onChange:typingHandler}),/*#__PURE__*/_jsx(Button,{type:\"button\",marginLeft:\"8px\",colorScheme:\"whatsapp\",onClick:sendMessage,children:\"Send\"})]})]})]}):/*#__PURE__*/_jsx(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",className:\"openwindow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"insidewindow\",children:/*#__PURE__*/_jsx(\"div\",{children:\"Click on a user to start chatting\"})})})});}export default SingleChat;","map":{"version":3,"names":["ArrowBackIcon","ViewIcon","Box","Button","FormControl","IconButton","Input","Spinner","Text","useToast","axios","useEffect","useState","GroupChats","UpdateGroupChatModal","ProfileModal","SingleChats","ChatState","io","getSender","getSenderFull","ScrollableFeed","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","notification","setNotification","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","fetchMessages","config","headers","Authorization","token","get","_id","data","emit","title","description","status","duration","isClosable","position","eventhandler","event","key","sendMessage","post","content","chatId","on","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","base","md","isGroupChat","users","chatname","toUpperCase"],"sources":["C:/chatAPP/frontend/src/components/miscellaneous/SingleChatBox.js"],"sourcesContent":["import { ArrowBackIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport \"./styles.css\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GroupChats from \"../Avatar/GroupChatsapperance\";\r\nimport UpdateGroupChatModal from \"../Avatar/GroupSettings\";\r\nimport ProfileModal from \"../Avatar/ProfileBadge\";\r\nimport SingleChats from \"../Avatar/SingleChatsapperance\";\r\nimport { ChatState } from \"../Context/GlobalHooks\";\r\nimport io from \"socket.io-client\";\r\nimport { getSender, getSenderFull } from \"../../config/ChatLogic\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport \"./chatapplogo.png\";\r\n\r\nconst ENDPOINT = \"https://chatapp1207.herokuapp.com/\";\r\nvar socket, selectedChatCompare;\r\n\r\nfunction SingleChat({ fetchAgain, setFetchAgain }) {\r\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const eventhandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n  const sendMessage = async () => {\r\n    if (newMessage) {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n          `/api/message`,\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat._id,\r\n          },\r\n          config\r\n        );\r\n\r\n        setMessages([...messages, data]);\r\n        socket.emit(\"new message\", data);\r\n        setNewMessage(\"\");\r\n        setFetchAgain(!fetchAgain);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connection\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n            bg=\"#F0F2F5\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)}>\r\n                  <IconButton display={{ base: \"flex\" }} icon={<ViewIcon />} />\r\n                </ProfileModal>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatname.toUpperCase()}\r\n                <>{istyping ? <div>Loading...</div> : <></>}</>\r\n                <UpdateGroupChatModal\r\n                  fetchMessages={fetchMessages}\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            //bg=\"#EFEAE2\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            overflowY=\"hidden\"\r\n            className=\"back\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <ScrollableFeed className=\"messages\">\r\n                {!selectedChat.isGroupChat ? (\r\n                  <SingleChats messages={messages} />\r\n                ) : (\r\n                  <GroupChats messages={messages} />\r\n                )}\r\n              </ScrollableFeed>\r\n            )}\r\n\r\n            <FormControl\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              onKeyDown={eventhandler}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={5}\r\n              mb={3}\r\n            >\r\n              {istyping ? <div>Loading...</div> : <></>}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"white\"\r\n                width=\"90%\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                marginLeft=\"8px\"\r\n                colorScheme=\"whatsapp\"\r\n                onClick={sendMessage}\r\n              >\r\n              Send\r\n              </Button>\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100%\"\r\n          className=\"openwindow\"\r\n        >\r\n          <div className=\"insidewindow\">\r\n            <div>Click on a user to start chatting</div>\r\n          </div>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}