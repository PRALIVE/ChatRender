{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatsApps\\\\chat\\\\frontend\\\\src\\\\components\\\\miscellaneous\\\\Leftpart.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Avatar, Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/GlobalHooks\";\nimport ChatLoading from \"../Avatar/ChatLoading\";\nimport GroupChatModal from \"../Avatar/GroupChatModal\";\nimport { getSender } from \"../../config/ChatLogic\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leftpart(_ref) {\n  _s();\n\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    user,\n    chats,\n    setChats,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      display: \"flex\",\n      w: \"100%\",\n      height: \"90px\",\n      bg: \"#53BDEB\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          display: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 26\n          }, this),\n          children: \"New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      bg: \"white\",\n      w: \"100%\",\n      h: \"100%\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftc\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          minH: \"60px\",\n          bg: selectedChat === chat ? \"#F0F2F5\" : \"white\",\n          color: selectedChat === chat ? \"black\" : \"black\",\n          px: 3,\n          py: 3,\n          borderTopWidth: \"1.4px\",\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageavatar\",\n            children: !chat.isGroupChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imageavatar\",\n                src: chat.users[1].pic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n              mr: 2,\n              bg: \"grey\",\n              size: \"md\",\n              cursor: \"pointer\",\n              name: \"GroupChat\" //src={user.pic}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              className: \"chatname\",\n              children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(Text, {\n              className: \"below-chatname\",\n              children: [chat.latestMessage.sender.name === user.name ? \"You\" : chat.latestMessage.sender.name, \":\", \" \", chat.latestMessage.content.length > 50 ? chat.latestMessage.content.substring(0, 51) + \"...\" : chat.latestMessage.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, chat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Leftpart, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n\n_c = Leftpart;\nexport default Leftpart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leftpart\");","map":{"version":3,"names":["AddIcon","Avatar","Box","Button","Stack","Text","useToast","axios","useEffect","useState","ChatState","ChatLoading","GroupChatModal","getSender","Leftpart","fetchAgain","loggedUser","setLoggedUser","user","chats","setChats","selectedChat","setSelectedChat","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md","lg","map","chat","isGroupChat","users","pic","chatname","latestMessage","sender","name","content","length","substring","_id"],"sources":["C:/chatsApps/chat/frontend/src/components/miscellaneous/Leftpart.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar, Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/GlobalHooks\";\r\nimport ChatLoading from \"../Avatar/ChatLoading\";\r\nimport GroupChatModal from \"../Avatar/GroupChatModal\";\r\nimport { getSender } from \"../../config/ChatLogic\";\r\nimport \"./styles.css\";\r\nfunction Leftpart({ fetchAgain }) {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { user, chats, setChats, selectedChat, setSelectedChat } = ChatState();\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n      <Box\r\n        display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n        flexDir=\"column\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w={{ base: \"100%\", md: \"31%\" }}\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Box\r\n          pb={3}\r\n          px={3}\r\n          fontSize={{ base: \"28px\", md: \"30px\" }}\r\n          fontFamily=\"Work sans\"\r\n          display=\"flex\"\r\n          w=\"100%\"\r\n          height=\"90px\"\r\n          bg=\"#53BDEB\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          Chats\r\n          <GroupChatModal>\r\n            <Button\r\n              display=\"flex\"\r\n              fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n              rightIcon={<AddIcon />}\r\n            >\r\n              New Group\r\n            </Button>\r\n          </GroupChatModal>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          bg=\"white\"\r\n          w=\"100%\"\r\n          h=\"100%\"\r\n          overflowY=\"hidden\"\r\n        > \r\n          {chats ? (\r\n            <div className=\"leftc\">\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  cursor=\"pointer\"\r\n                  minH=\"60px\"\r\n                  bg={selectedChat === chat ? \"#F0F2F5\" : \"white\"}\r\n                  color={selectedChat === chat ? \"black\" : \"black\"}\r\n                  px={3}\r\n                  py={3}\r\n                  borderTopWidth=\"1.4px\"\r\n                  key={chat._id}\r\n                  display=\"flex\"\r\n                >\r\n                  <div className=\"imageavatar\">\r\n                    {!chat.isGroupChat ? (\r\n                      <div>\r\n                        <img className=\"imageavatar\" src={chat.users[1].pic} />\r\n                      </div>\r\n                    ) : (\r\n                      <Avatar\r\n                        mr={2}\r\n                        bg=\"grey\"\r\n                        size=\"md\"\r\n                        cursor=\"pointer\"\r\n                        name=\"GroupChat\"\r\n                        //src={user.pic}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <Text className=\"chatname\">\r\n                      {!chat.isGroupChat\r\n                        ? getSender(loggedUser, chat.users)\r\n                        : chat.chatname}\r\n                    </Text>\r\n                    {chat.latestMessage && (\r\n                      <Text className=\"below-chatname\">\r\n                        {chat.latestMessage.sender.name === user.name\r\n                          ? \"You\"\r\n                          : chat.latestMessage.sender.name}\r\n                        :{\" \"}\r\n                        {chat.latestMessage.content.length > 50\r\n                          ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                          : chat.latestMessage.content}\r\n                      </Text>\r\n                    )}\r\n                  </div>\r\n                </Box>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <ChatLoading />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n  );\r\n}\r\n\r\nexport default Leftpart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}