{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatAPP\\\\frontend\\\\src\\\\components\\\\miscellaneous\\\\SingleChatBox.js\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport \"./styles.css\";\nimport { Box, Button, FormControl, IconButton, Input, Spinner, Text, useToast } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport GroupChats from \"../Avatar/GroupChatsapperance\";\nimport UpdateGroupChatModal from \"../Avatar/GroupSettings\";\nimport ProfileModal from \"../Avatar/ProfileBadge\";\nimport SingleChats from \"../Avatar/SingleChatsapperance\";\nimport { ChatState } from \"../Context/GlobalHooks\";\nimport io from \"socket.io-client\";\nimport { getSender, getSenderFull } from \"../../config/ChatLogic\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport \"./chatapplogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3001\";\nvar socket, selectedChatCompare;\n\nfunction SingleChat(_ref) {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    notification,\n    setNotification\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n\n  const eventhandler = async event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  const sendMessage = async () => {\n    if (newMessage) {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        const {\n          data\n        } = await axios.post(`/api/message`, {\n          content: newMessage,\n          chatId: selectedChat._id\n        }, config);\n        setMessages([...messages, data]);\n        socket.emit(\"new message\", data);\n        setNewMessage(\"\");\n        setFetchAgain(!fetchAgain);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connection\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n  }, []);\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(() => {\n    socket.on(\"message recieved\", newMessageRecieved => {\n      if (!selectedChatCompare || // if chat is not selected or doesn't match current chat\n      selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        bg: \"#F0F2F5\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          display: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderFull(user, selectedChat.users),\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              display: {\n                base: \"flex\"\n              },\n              icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatname.toUpperCase(), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: istyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchMessages: fetchMessages,\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\" //bg=\"#EFEAE2\"\n        ,\n        w: \"100%\",\n        h: \"100%\",\n        overflowY: \"hidden\",\n        className: \"back\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          w: 20,\n          h: 20,\n          alignSelf: \"center\",\n          margin: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n          className: \"messages\",\n          children: !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(SingleChats, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(GroupChats, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          onKeyDown: eventhandler,\n          id: \"first-name\",\n          isRequired: true,\n          mt: 5,\n          mb: 3,\n          children: [istyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"white\",\n            width: \"90%\",\n            placeholder: \"Enter a message..\",\n            value: newMessage,\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            marginLeft: \"8px\",\n            colorScheme: \"whatsapp\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      className: \"openwindow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insidewindow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"chatapplogo.png\",\n            alt: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Click on a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SingleChat, \"J0/5w4jPVqRx8QfTCSBBWdq70n4=\", false, function () {\n  return [useToast];\n});\n\n_c = SingleChat;\nexport default SingleChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["ArrowBackIcon","ViewIcon","Box","Button","FormControl","IconButton","Input","Spinner","Text","useToast","axios","useEffect","useState","GroupChats","UpdateGroupChatModal","ProfileModal","SingleChats","ChatState","io","getSender","getSenderFull","ScrollableFeed","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","notification","setNotification","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","fetchMessages","config","headers","Authorization","token","data","get","_id","emit","error","title","description","status","duration","isClosable","position","eventhandler","event","key","sendMessage","post","content","chatId","on","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","base","md","isGroupChat","users","chatname","toUpperCase"],"sources":["C:/chatAPP/frontend/src/components/miscellaneous/SingleChatBox.js"],"sourcesContent":["import { ArrowBackIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport \"./styles.css\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GroupChats from \"../Avatar/GroupChatsapperance\";\r\nimport UpdateGroupChatModal from \"../Avatar/GroupSettings\";\r\nimport ProfileModal from \"../Avatar/ProfileBadge\";\r\nimport SingleChats from \"../Avatar/SingleChatsapperance\";\r\nimport { ChatState } from \"../Context/GlobalHooks\";\r\nimport io from \"socket.io-client\";\r\nimport { getSender, getSenderFull } from \"../../config/ChatLogic\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport \"./chatapplogo.png\";\r\n\r\nconst ENDPOINT = \"http://localhost:3001\";\r\nvar socket, selectedChatCompare;\r\n\r\nfunction SingleChat({ fetchAgain, setFetchAgain }) {\r\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const eventhandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n  const sendMessage = async () => {\r\n    if (newMessage) {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n          `/api/message`,\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat._id,\r\n          },\r\n          config\r\n        );\r\n\r\n        setMessages([...messages, data]);\r\n        socket.emit(\"new message\", data);\r\n        setNewMessage(\"\");\r\n        setFetchAgain(!fetchAgain);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connection\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n            bg=\"#F0F2F5\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)}>\r\n                  <IconButton display={{ base: \"flex\" }} icon={<ViewIcon />} />\r\n                </ProfileModal>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatname.toUpperCase()}\r\n                <>{istyping ? <div>Loading...</div> : <></>}</>\r\n                <UpdateGroupChatModal\r\n                  fetchMessages={fetchMessages}\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            //bg=\"#EFEAE2\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            overflowY=\"hidden\"\r\n            className=\"back\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <ScrollableFeed className=\"messages\">\r\n                {!selectedChat.isGroupChat ? (\r\n                  <SingleChats messages={messages} />\r\n                ) : (\r\n                  <GroupChats messages={messages} />\r\n                )}\r\n              </ScrollableFeed>\r\n            )}\r\n\r\n            <FormControl\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              onKeyDown={eventhandler}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={5}\r\n              mb={3}\r\n            >\r\n              {istyping ? <div>Loading...</div> : <></>}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"white\"\r\n                width=\"90%\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                marginLeft=\"8px\"\r\n                colorScheme=\"whatsapp\"\r\n                onClick={sendMessage}\r\n              >\r\n                Send\r\n              </Button>\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100%\"\r\n          className=\"openwindow\"\r\n        >\r\n          <div className=\"insidewindow\">\r\n            <div>\r\n              <img src=\"chatapplogo.png\" alt=\"loading\" />\r\n            </div>\r\n            <div>Click on a user to start chatting</div>\r\n          </div>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}