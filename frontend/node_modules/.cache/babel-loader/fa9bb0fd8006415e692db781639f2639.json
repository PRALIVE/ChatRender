{"ast":null,"code":"var _jsxFileName = \"C:\\\\chatAPP\\\\frontend\\\\src\\\\components\\\\miscellaneous\\\\SingleChatBox.js\";\nimport { ArrowBackIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { Box, IconButton, Text } from \"@chakra-ui/react\";\nimport UpdateGroupChatModal from \"../Avatar/GroupSettings\";\nimport ProfileModal from \"../Avatar/ProfileBadge\";\nimport { ChatState } from \"../Context/GlobalHooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleChat(_ref) {\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const [messages, setMessages] = useSt;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          display: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.users[1].name, /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: selectedChat.users[1],\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              display: {\n                base: \"flex\"\n              },\n              icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatname.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = SingleChat;\nexport default SingleChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["ArrowBackIcon","ViewIcon","Box","IconButton","Text","UpdateGroupChatModal","ProfileModal","ChatState","SingleChat","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","messages","setMessages","useSt","base","md","isGroupChat","users","name","chatname","toUpperCase"],"sources":["C:/chatAPP/frontend/src/components/miscellaneous/SingleChatBox.js"],"sourcesContent":["import { ArrowBackIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { Box, IconButton, Text } from \"@chakra-ui/react\";\r\nimport UpdateGroupChatModal from \"../Avatar/GroupSettings\";\r\nimport ProfileModal from \"../Avatar/ProfileBadge\";\r\nimport { ChatState } from \"../Context/GlobalHooks\";\r\n\r\nfunction SingleChat({ fetchAgain , setFetchAgain }) {\r\n  const { user, selectedChat, setSelectedChat } = ChatState();\r\n\r\n  const [messages , setMessages] = useSt\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n              {selectedChat.users[1].name}\r\n                <ProfileModal user={selectedChat.users[1]}>\r\n                  <IconButton\r\n                    display={{ base: \"flex\" }}\r\n                    icon={<ViewIcon />}\r\n                  />\r\n                </ProfileModal>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatname.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n        </>\r\n      ) : (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;;AAEA,SAASC,UAAT,OAAoD;EAAA,IAAhC;IAAEC,UAAF;IAAeC;EAAf,CAAgC;EAClD,MAAM;IAAEC,IAAF;IAAQC,YAAR;IAAsBC;EAAtB,IAA0CN,SAAS,EAAzD;EAEA,MAAM,CAACO,QAAD,EAAYC,WAAZ,IAA2BC,KAAjC;EAEA,oBACE;IAAA,UACGJ,YAAY,gBACX;MAAA,uBACE,QAAC,IAAD;QACE,QAAQ,EAAE;UAAEK,IAAI,EAAE,MAAR;UAAgBC,EAAE,EAAE;QAApB,CADZ;QAEE,EAAE,EAAE,CAFN;QAGE,EAAE,EAAE,CAHN;QAIE,CAAC,EAAC,MAJJ;QAKE,UAAU,EAAC,WALb;QAME,OAAO,EAAC,MANV;QAOE,cAAc,EAAE;UAAED,IAAI,EAAE;QAAR,CAPlB;QAQE,UAAU,EAAC,QARb;QAAA,wBAUE,QAAC,UAAD;UACE,OAAO,EAAE;YAAEA,IAAI,EAAE,MAAR;YAAgBC,EAAE,EAAE;UAApB,CADX;UAEE,IAAI,eAAE,QAAC,aAAD;YAAA;YAAA;YAAA;UAAA,QAFR;UAGE,OAAO,EAAE,MAAML,eAAe,CAAC,EAAD;QAHhC;UAAA;UAAA;UAAA;QAAA,QAVF,EAeG,CAACD,YAAY,CAACO,WAAd,gBACC;UAAA,WACCP,YAAY,CAACQ,KAAb,CAAmB,CAAnB,EAAsBC,IADvB,eAEE,QAAC,YAAD;YAAc,IAAI,EAAET,YAAY,CAACQ,KAAb,CAAmB,CAAnB,CAApB;YAAA,uBACE,QAAC,UAAD;cACE,OAAO,EAAE;gBAAEH,IAAI,EAAE;cAAR,CADX;cAEE,IAAI,eAAE,QAAC,QAAD;gBAAA;gBAAA;gBAAA;cAAA;YAFR;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,gBADD,gBAWC;UAAA,WACGL,YAAY,CAACU,QAAb,CAAsBC,WAAtB,EADH,eAEE,QAAC,oBAAD;YACE,UAAU,EAAEd,UADd;YAEE,aAAa,EAAEC;UAFjB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,gBA1BJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADW,gBAuCX,QAAC,GAAD;MAAK,OAAO,EAAC,MAAb;MAAoB,UAAU,EAAC,QAA/B;MAAwC,cAAc,EAAC,QAAvD;MAAgE,CAAC,EAAC,MAAlE;MAAA,uBACE,QAAC,IAAD;QAAM,QAAQ,EAAC,KAAf;QAAqB,EAAE,EAAE,CAAzB;QAA4B,UAAU,EAAC,WAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAxCJ,iBADF;AAiDD;;KAtDQF,U;AAwDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}